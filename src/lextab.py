# pypasparser.lextab.py. This file automatically created by PLY (version 3.3). Don't edit!
_tabversion   = '3.3'
_lextokens    = {'OBJECT': 1, 'LBRACKET': 1, 'WRITEONLY': 1, 'PROTECTED': 1, 'FLOAT_CONST': 1, 'FILE': 1, 'WITH': 1, 'MINUS': 1, 'PACKED': 1, 'ABSOLUTE': 1, 'RPAREN': 1, 'PLATFORM': 1, 'IMPLEMENTATION': 1, 'EXCEPT': 1, 'READ': 1, 'PLUS': 1, 'VARARGS': 1, 'EXTENDED': 1, 'GOTO': 1, 'PERIOD': 1, 'HIGH': 1, 'GE': 1, 'INT_CONST_DEC': 1, 'CIRCUMFLEX': 1, 'VAR': 1, 'REINTRODUCE': 1, 'PROCEDURE': 1, 'ON': 1, 'LABEL_ID': 1, 'EQ': 1, 'NIL': 1, 'OF': 1, 'CONTAINS': 1, 'WHILE': 1, 'CHAR_CONST': 1, 'NEAR': 1, 'STORED': 1, 'DOUBLE': 1, 'INTERFACE': 1, 'PROPERTY': 1, 'OR': 1, 'INDEX': 1, 'ANSISTRING': 1, 'SHORTINT': 1, 'ASSIGNMENT': 1, 'LABEL': 1, 'CURRENCY': 1, 'USES': 1, 'REAL48': 1, 'RESOURCESTRING': 1, 'SIZEOF': 1, 'BEGIN': 1, 'DEPRECATED': 1, 'DYNAMIC': 1, 'LIBRARY': 1, 'READONLY': 1, 'COLON': 1, 'INTEGER': 1, 'REQUIRES': 1, 'INITIALIZATION': 1, 'FUNCTION': 1, 'SHR': 1, 'REPEAT': 1, 'END': 1, 'DIVIDE': 1, 'FOR': 1, 'DISPID': 1, 'VIRTUAL': 1, 'ELSE': 1, 'TRY': 1, 'STDCALL': 1, 'INT64': 1, 'EXTERNAL': 1, 'INHERITED': 1, 'SHL': 1, 'UNTIL': 1, 'UNIT': 1, 'AND': 1, 'INT_CONST_OCT': 1, 'OLEVARIANT': 1, 'FINALLY': 1, 'DOWNTO': 1, 'CONTINUE': 1, 'NOT': 1, 'MOD': 1, 'REAL': 1, 'THEN': 1, 'SAFECALL': 1, 'RAISE': 1, 'DEFAULT': 1, 'PUBLISHED': 1, 'CHAR': 1, 'PASCAL': 1, 'PROGRAM': 1, 'TO': 1, 'CASE': 1, 'SET': 1, 'WORD': 1, 'SEMICOLON': 1, 'FINALIZATION': 1, 'REGISTER': 1, 'NE': 1, 'OVERLOAD': 1, 'ARRAY': 1, 'ASM': 1, 'OUT': 1, 'RBRACKET': 1, 'PACKAGE': 1, 'COMP': 1, 'INT_CONST_HEX': 1, 'WRITE': 1, 'BYTE': 1, 'CONST_ID': 1, 'IMPLEMENTS': 1, 'EXPORTS': 1, 'NAME': 1, 'SINGLE': 1, 'BREAK': 1, 'BOOLEAN': 1, 'EXIT': 1, 'AUTOMATED': 1, 'INLINE': 1, 'TYPE': 1, 'PUBLIC': 1, 'DO': 1, 'CONST': 1, 'ABSTRACT': 1, 'LONGINT': 1, 'GT': 1, 'EXPORT': 1, 'LOW': 1, 'CONSTRUCTOR': 1, 'DWORD': 1, 'DIV': 1, 'SMALLINT': 1, 'NODEFAULT': 1, 'LE': 1, 'CDECL': 1, 'FAR': 1, 'VAR_ID': 1, 'VARIANT': 1, 'UNIT_ID': 1, 'PRIVATE': 1, 'DOTDOT': 1, 'RECORD': 1, 'LT': 1, 'COMMA': 1, 'OVERRIDE': 1, 'ATSIGN': 1, 'CLASS': 1, 'PCHAR': 1, 'XOR': 1, 'STRING': 1, 'TYPE_ID': 1, 'RESIDENT': 1, 'IS': 1, 'TIMES': 1, 'AS': 1, 'AT': 1, 'LPAREN': 1, 'IN': 1, 'FORWARD': 1, 'LOCAL': 1, 'ID': 1, 'IF': 1, 'WRITELN': 1, 'STRING_LITERAL': 1, 'LONGWORD': 1, 'SELF': 1, 'DESTRUCTOR': 1, 'WIDESTRING': 1, 'WIDECHAR': 1, 'MESSAGE': 1, 'POINTER': 1}
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive', 'multicommentCurlyBrace': 'exclusive', 'multicomment': 'exclusive'}
_lexstatere   = {'INITIAL': [("(?P<t_multicomment>\\(\\*)|(?P<t_multicommentCurlyBrace>\\{)|(?P<t_EOF>\\z)|(?P<t_NEWLINE>\\n+)|(?P<t_DOTDOT>\\.\\.)|(?P<t_SEMICOLON>;)|(?P<t_FLOAT_CONST>((((([0-9]+\\.(?=[^\\.])[0-9]*))([eE][-+]?[0-9]+)?)|([0-9]+([eE][-+]?[0-9]+)))[FfLl]?))|(?P<t_INT_CONST_HEX>(\\$[0-9a-fA-F]+|[0-9]+[0-9a-fA-F]*[hH]))|(?P<t_INT_CONST_DEC>[0-9]+)|(?P<t_ID>[a-zA-Z_][0-9a-zA-Z_]*)|(?P<t_STRING_LITERAL>(\\'[^']+\\')|(\\'\\')|(\\#[0-9]+)|(\\#\\$[0-9a-fA-F]+))|(?P<t_ignore_COMMENT_SINGLE>//.*)|(?P<t_PLUS>\\+)|(?P<t_ATSIGN>\\@)|(?P<t_RBRACKET>\\])|(?P<t_LE><=)|(?P<t_LPAREN>\\()|(?P<t_NE><>)|(?P<t_ASSIGNMENT>:=)|(?P<t_PERIOD>\\.)|(?P<t_TIMES>\\*)|(?P<t_LBRACKET>\\[)|(?P<t_GE>>=)|(?P<t_RPAREN>\\))|(?P<t_CIRCUMFLEX>\\^)|(?P<t_LT><)|(?P<t_COMMA>,)|(?P<t_EQ>=)|(?P<t_DIVIDE>/)|(?P<t_MINUS>-)|(?P<t_GT>>)|(?P<t_COLON>:)", [None, ('t_multicomment', 'multicomment'), ('t_multicommentCurlyBrace', 'multicommentCurlyBrace'), ('t_EOF', 'EOF'), ('t_NEWLINE', 'NEWLINE'), ('t_DOTDOT', 'DOTDOT'), ('t_SEMICOLON', 'SEMICOLON'), ('t_FLOAT_CONST', 'FLOAT_CONST'), None, None, None, None, None, None, None, None, ('t_INT_CONST_HEX', 'INT_CONST_HEX'), None, ('t_INT_CONST_DEC', 'INT_CONST_DEC'), ('t_ID', 'ID'), (None, 'STRING_LITERAL'), None, None, None, None, (None, None), (None, 'PLUS'), (None, 'ATSIGN'), (None, 'RBRACKET'), (None, 'LE'), (None, 'LPAREN'), (None, 'NE'), (None, 'ASSIGNMENT'), (None, 'PERIOD'), (None, 'TIMES'), (None, 'LBRACKET'), (None, 'GE'), (None, 'RPAREN'), (None, 'CIRCUMFLEX'), (None, 'LT'), (None, 'COMMA'), (None, 'EQ'), (None, 'DIVIDE'), (None, 'MINUS'), (None, 'GT'), (None, 'COLON')])], 'multicommentCurlyBrace': [('(?P<t_multicommentCurlyBrace_end>\\})|(?P<t_multicommentCurlyBrace_NEWLINE>\\n+)|(?P<t_multicommentCurlyBrace_text>[^}])', [None, ('t_multicommentCurlyBrace_end', 'end'), ('t_multicommentCurlyBrace_NEWLINE', 'NEWLINE'), ('t_multicommentCurlyBrace_text', 'text')])], 'multicomment': [('(?P<t_multicomment_text>.+(?=\\*\\)))|(?P<t_multicomment_end>\\*\\))|(?P<t_multicomment_NEWLINE>\\n+)', [None, ('t_multicomment_text', 'text'), ('t_multicomment_end', 'end'), ('t_multicomment_NEWLINE', 'NEWLINE')])]}
_lexstateignore = {'INITIAL': ' \t', 'multicommentCurlyBrace': ' \t', 'multicomment': '\t '}
_lexstateerrorf = {'INITIAL': 't_error', 'multicommentCurlyBrace': 't_multicommentCurlyBrace_error', 'multicomment': 't_multicomment_error'}
